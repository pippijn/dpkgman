#!/usr/bin/make -f

###########################################################
# :: Architectures to build for
###########################################################

ARCHITECTURES	:= i386 amd64
ARCHIVE		:= ppa:pippijn/ppa


###########################################################
# :: Variables
###########################################################

ifeq ($(wildcard debian/changelog),)
$(error No debian/changelog found.\
	Make sure to run this script from the project root)
endif

# Force sudo auth caching before running parallel builds.
SUDO		:= $(shell sudo which sudo)

CACHEDIR	:= /var/cache/pbuilder
RESULTDIR	:= $(CACHEDIR)/result
PACKAGE_NAME	:= $(shell head -n1 debian/changelog | awk '{print $$1}')
PACKAGE_VERSION	:= $(shell head -n1 debian/changelog | sed -e 's/.*(\(.*\)).*/\1/')
DISTRIBUTION	:= $(shell head -n1 debian/changelog | awk '{print $$3}' | sed -e 's/;$$//')

ifeq ($(PACKAGE_NAME),)
$(error Unable to extract package name from debian/changelog)
endif
ifeq ($(PACKAGE_VERSION),)
$(error Unable to extract package version from debian/changelog)
endif
ifeq ($(DISTRIBUTION),)
$(error Unable to extract distribution from debian/changelog)
endif

PACKAGE		:= $(PACKAGE_NAME)_$(PACKAGE_VERSION)
TARGETS		:= $(foreach A,$(ARCHITECTURES),$(RESULTDIR)/$(PACKAGE)_$A.deb)


###########################################################
# :: Rules
###########################################################

default: $(TARGETS)

clean:
	rm -f ../$(PACKAGE)*

upload: ../$(PACKAGE)_source.changes
	dput $(ARCHIVE) $<

show:
	@echo "Package name   : $(PACKAGE_NAME)"
	@echo "Package version: $(PACKAGE_VERSION)"
	@echo "Architectures  : $(ARCHITECTURES)"
	@echo "Distribution   : $(DISTRIBUTION)"

$(RESULTDIR)/$(PACKAGE)_%.deb: $(CACHEDIR)/$(DISTRIBUTION)-%.cow ../$(PACKAGE).dsc
	$(SUDO) cowbuilder	\
	  --build		\
	  --debbuildopts "-j8"	\
	  --basepath $+

$(CACHEDIR)/$(DISTRIBUTION)-%.cow:
	$(SUDO) cowbuilder		\
	  --create			\
	  --architecture $*		\
	  --distribution $(DISTRIBUTION)\
	  --basepath $@			\
	  --debootstrapopts "--variant=buildd"
	@test -f $@

# Unsigned for local build.
../$(PACKAGE).dsc: clean
	debuild -S -us -uc
	@test -f $@

# Signed for upload.
../$(PACKAGE)_source.changes: clean
	debuild -S
	@test -f $@
